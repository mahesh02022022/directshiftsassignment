{"ast":null,"code":"var _jsxFileName = \"C:\\\\ruby_prg\\\\7\\\\react-wishlist-series\\\\frontend\\\\src\\\\app\\\\features\\\\sessions\\\\Signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Alert, Box, Button, Card, CardActions, CardContent, Container, Divider, FormControl, FormGroup, FormHelperText, IconButton, Input, InputAdornment, InputLabel, OutlinedInput, Typography } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { resetErrorState, signUpUser } from \"./sessionSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmationRef = useRef();\n  const errorMessages = useSelector(state => state.session.errorMessages);\n  const [errors, setErrors] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const loading = false;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var _emailRef$current;\n\n    emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.focus();\n\n    if (errorMessages !== undefined) {\n      setErrors(errorMessages);\n      dispatch(resetErrorState());\n    }\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setErrors([]);\n\n    if ((emailRef === null || emailRef === void 0 ? void 0 : emailRef.current) === undefined || emailRef.current.value === \"\" || (passwordRef === null || passwordRef === void 0 ? void 0 : passwordRef.current) === undefined || passwordRef.current.value === \"\" || (passwordConfirmationRef === null || passwordConfirmationRef === void 0 ? void 0 : passwordConfirmationRef.current) === undefined || passwordConfirmationRef.current.value === \"\") {\n      return setErrors([\"Please fill out all fields\"]);\n    }\n\n    if (passwordRef.current.value !== passwordConfirmationRef.current.value) {\n      return setErrors([\"Passwords do not match\"]);\n    }\n\n    const payload = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    const response = await dispatch(signUpUser(payload));\n    console.log(response);\n\n    if (errorMessages.length > 0) {\n      navigate(\"/\");\n    } else {\n      return setErrors(errorMessages);\n    }\n  }\n\n  const passwordInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password\",\n    type: showPassword ? 'text' : 'password',\n    inputRef: passwordRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 25\n  }, this);\n\n  const passwordConfirmationInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password-confirmation\",\n    type: showPassword ? 'text' : 'password',\n    inputRef: passwordConfirmationRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 37\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      marginTop: \"2em\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          boxShadow: 1,\n          maxWidth: 'md'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              color: \"text.primary\",\n              gutterBottom: true,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              \"aria-live\": \"assertive\",\n              children: errors.map((error, index) => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: error\n                }, `alert-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"email-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    required: true,\n                    htmlFor: \"email\",\n                    id: \"email-label\",\n                    children: \"Email Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"email\",\n                    type: \"email\",\n                    inputRef: emailRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    id: \"email-helper-text\",\n                    children: \"We'll never share your email.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"password-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    required: true,\n                    htmlFor: \"password\",\n                    id: \"password-label\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), passwordInput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"password-confirmation-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    required: true,\n                    htmlFor: \"password-confirmation\",\n                    id: \"password-confirmation-label\",\n                    children: \"Password Confirmation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this), passwordConfirmationInput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"submit-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: loading,\n                    variant: \"contained\",\n                    color: \"primary\",\n                    type: \"submit\",\n                    id: \"submit-button\",\n                    children: \"Create Account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          light: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          sx: {\n            marginTop: \"1em\",\n            justifyContent: 'center'\n          },\n          disableSpacing: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"o31B6Qtv9haX3ZStiZA6Tli99HU=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/ruby_prg/7/react-wishlist-series/frontend/src/app/features/sessions/Signup.tsx"],"names":["Visibility","VisibilityOff","Alert","Box","Button","Card","CardActions","CardContent","Container","Divider","FormControl","FormGroup","FormHelperText","IconButton","Input","InputAdornment","InputLabel","OutlinedInput","Typography","useEffect","useRef","useState","useDispatch","useSelector","Link","useNavigate","resetErrorState","signUpUser","Signup","emailRef","passwordRef","passwordConfirmationRef","errorMessages","state","session","errors","setErrors","showPassword","setShowPassword","loading","navigate","dispatch","current","focus","undefined","handleSubmit","event","preventDefault","value","payload","email","password","response","console","log","length","passwordInput","passwordConfirmationInput","marginTop","boxShadow","maxWidth","map","error","index","justifyContent"],"mappings":"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","sourcesContent":["import { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { Alert, Box, Button, Card, CardActions, CardContent, Container, Divider, FormControl, FormGroup, FormHelperText, IconButton, Input, InputAdornment, InputLabel, OutlinedInput, Typography } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../../store\";\r\nimport { resetErrorState, signUpUser } from \"./sessionSlice\";\r\n\r\n\r\nfunction Signup() {\r\n  const emailRef = useRef<HTMLInputElement>();\r\n  const passwordRef = useRef<HTMLInputElement>();\r\n  const passwordConfirmationRef = useRef<HTMLInputElement>();\r\n  const errorMessages = useSelector((state: RootState) => state.session.errorMessages);\r\n\r\n  const [errors, setErrors] = useState<Array<string>>([])\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const loading = false;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    emailRef?.current?.focus();\r\n    if (errorMessages !== undefined) {\r\n      setErrors(errorMessages);\r\n      dispatch(resetErrorState());\r\n    }\r\n  }, [])\r\n\r\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    setErrors([]);\r\n    if (emailRef?.current === undefined\r\n      || emailRef.current.value === \"\"\r\n      || passwordRef?.current === undefined\r\n      || passwordRef.current.value === \"\"\r\n      || passwordConfirmationRef?.current === undefined\r\n          || passwordConfirmationRef.current.value === \"\") {\r\n      return setErrors([\"Please fill out all fields\"])\r\n    }\r\n    if (passwordRef.current.value !== passwordConfirmationRef.current.value) {\r\n      return setErrors([\"Passwords do not match\"])\r\n    }\r\n    const payload = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value\r\n    }\r\n    const response = await dispatch(signUpUser(payload)) as any;\r\n\r\n    console.log(response);\r\n    if (errorMessages.length > 0) {\r\n      navigate(\"/\");\r\n    } else {\r\n      return setErrors(errorMessages);\r\n    }\r\n  }\r\n\r\n  const passwordInput = <OutlinedInput id=\"password\" type={showPassword ? 'text' : 'password'} inputRef={passwordRef} endAdornment={\r\n    <InputAdornment position=\"end\">\r\n      <IconButton\r\n        aria-label=\"toggle password visibility\"\r\n        onClick={() => setShowPassword(!showPassword)}\r\n        onMouseDown={() => setShowPassword(!showPassword)}\r\n        edge=\"end\">\r\n          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n      </IconButton>\r\n    </InputAdornment>\r\n  } />;\r\n\r\n  const passwordConfirmationInput = <OutlinedInput id=\"password-confirmation\" type={showPassword ? 'text' : 'password'} inputRef={passwordConfirmationRef} endAdornment={\r\n    <InputAdornment position=\"end\">\r\n      <IconButton\r\n        aria-label=\"toggle password visibility\"\r\n        onClick={() => setShowPassword(!showPassword)}\r\n        onMouseDown={() => setShowPassword(!showPassword)}\r\n        edge=\"end\">\r\n          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n      </IconButton>\r\n    </InputAdornment>\r\n  } />;\r\n\r\n  return (\r\n    <section style={{marginTop:\"2em\"}}>\r\n      <Container maxWidth=\"md\">\r\n        <Card sx={{boxShadow:1, maxWidth: 'md'}}>\r\n          <CardContent>\r\n            <Container maxWidth=\"sm\">\r\n              <Typography variant=\"h2\" color=\"text.primary\" gutterBottom>\r\n                Sign Up\r\n              </Typography>\r\n              {errors.length > 0 ?\r\n                <Alert severity=\"error\" aria-live=\"assertive\">\r\n                  {errors.map((error, index) => {\r\n                    return <p key={`alert-${index}`}>\r\n                      {error}\r\n                    </p>\r\n                  })}\r\n                </Alert>\r\n              : <></>} \r\n              <form onSubmit={handleSubmit}>\r\n                <FormGroup row={true} id=\"email-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel required htmlFor=\"email\" id=\"email-label\">Email Address</InputLabel>\r\n                    <Input id=\"email\" type=\"email\" inputRef={emailRef}/>\r\n                    <FormHelperText id=\"email-helper-text\">We&apos;ll never share your email.</FormHelperText>\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup row={true} id=\"password-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel required htmlFor=\"password\" id=\"password-label\">Password</InputLabel>\r\n                    {passwordInput}\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup row={true} id=\"password-confirmation-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel required htmlFor=\"password-confirmation\" id=\"password-confirmation-label\">Password Confirmation</InputLabel>\r\n                    {passwordConfirmationInput}\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup row={true} id=\"submit-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <Button \r\n                      disabled={loading} \r\n                      variant=\"contained\" \r\n                      color=\"primary\" \r\n                      type=\"submit\" \r\n                      id=\"submit-button\">Create Account</Button>\r\n                  </FormControl>\r\n                </FormGroup>\r\n              </form>\r\n            </Container>\r\n          </CardContent>\r\n          <Divider light={false} />\r\n          <CardActions sx={{marginTop: \"1em\", justifyContent: 'center' }} disableSpacing >\r\n            <Box>\r\n              Already have an account? <Link to=\"/login\">Login!</Link>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Container>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}
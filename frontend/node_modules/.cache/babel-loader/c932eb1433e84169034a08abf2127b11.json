{"ast":null,"code":"var _jsxFileName = \"C:\\\\ruby_prg\\\\7\\\\react-wishlist-series\\\\frontend\\\\src\\\\app\\\\features\\\\sessions\\\\Signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Alert, Box, Button, Card, CardActions, CardContent, Container, Divider, FormControl, FormGroup, FormHelperText, IconButton, Input, InputAdornment, InputLabel, OutlinedInput, Typography } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { resetErrorState, signUpUser } from \"./sessionSlice\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmationRef = useRef();\n  const errorMessages = useSelector(state => state.session.errorMessages);\n  const [errors, setErrors] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const loading = false;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var _emailRef$current;\n\n    emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.focus();\n\n    if (errorMessages !== undefined) {\n      setErrors(errorMessages);\n      dispatch(resetErrorState());\n    }\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setErrors([]);\n\n    if ((emailRef === null || emailRef === void 0 ? void 0 : emailRef.current) === undefined || emailRef.current.value === \"\" || (passwordRef === null || passwordRef === void 0 ? void 0 : passwordRef.current) === undefined || passwordRef.current.value === \"\" || (passwordConfirmationRef === null || passwordConfirmationRef === void 0 ? void 0 : passwordConfirmationRef.current) === undefined || passwordConfirmationRef.current.value === \"\") {\n      return setErrors([\"Please fill out all fields\"]);\n    }\n\n    if (passwordRef.current.value !== passwordConfirmationRef.current.value) {\n      return setErrors([\"Passwords do not match\"]);\n    }\n\n    const payload = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    const response = await dispatch(signUpUser(payload));\n    console.log(response);\n\n    if (errorMessages.length > 0) {\n      navigate(\"/\");\n    } else {\n      return setErrors(errorMessages);\n    }\n  }\n\n  const passwordInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password\",\n    type: showPassword ? \"text\" : \"password\",\n    inputRef: passwordRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n\n  const passwordConfirmationInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password-confirmation\",\n    type: showPassword ? \"text\" : \"password\",\n    inputRef: passwordConfirmationRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginTop: \"2em\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            boxShadow: 1,\n            maxWidth: \"md\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              maxWidth: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h2\",\n                color: \"text.primary\",\n                gutterBottom: true,\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                \"aria-live\": \"assertive\",\n                children: errors.map((error, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: error\n                  }, `alert-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 30\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  id: \"email-group\",\n                  sx: {\n                    marginTop: \"1em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      required: true,\n                      htmlFor: \"email\",\n                      id: \"email-label\",\n                      children: \"Email Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      id: \"email\",\n                      type: \"email\",\n                      inputRef: emailRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      id: \"email-helper-text\",\n                      children: \"We'll never share your email.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  id: \"password-group\",\n                  sx: {\n                    marginTop: \"1em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      required: true,\n                      htmlFor: \"password\",\n                      id: \"password-label\",\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 23\n                    }, this), passwordInput]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  id: \"password-confirmation-group\",\n                  sx: {\n                    marginTop: \"1em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      required: true,\n                      htmlFor: \"password-confirmation\",\n                      id: \"password-confirmation-label\",\n                      children: \"Password Confirmation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 23\n                    }, this), passwordConfirmationInput]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  row: true,\n                  id: \"submit-group\",\n                  sx: {\n                    marginTop: \"1em\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      disabled: loading,\n                      variant: \"contained\",\n                      color: \"primary\",\n                      type: \"submit\",\n                      id: \"submit-button\",\n                      children: \"Create Account\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            light: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            sx: {\n              marginTop: \"1em\",\n              justifyContent: \"center\"\n            },\n            disableSpacing: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Login!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"o31B6Qtv9haX3ZStiZA6Tli99HU=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/ruby_prg/7/react-wishlist-series/frontend/src/app/features/sessions/Signup.tsx"],"names":["Visibility","VisibilityOff","Alert","Box","Button","Card","CardActions","CardContent","Container","Divider","FormControl","FormGroup","FormHelperText","IconButton","Input","InputAdornment","InputLabel","OutlinedInput","Typography","useEffect","useRef","useState","useDispatch","useSelector","Link","useNavigate","resetErrorState","signUpUser","CssBaseline","ThemeProvider","Signup","emailRef","passwordRef","passwordConfirmationRef","errorMessages","state","session","errors","setErrors","showPassword","setShowPassword","loading","navigate","dispatch","current","focus","undefined","handleSubmit","event","preventDefault","value","payload","email","password","response","console","log","length","passwordInput","passwordConfirmationInput","theme","marginTop","display","flexDirection","alignItems","boxShadow","maxWidth","map","error","index","justifyContent"],"mappings":"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","sourcesContent":["import { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  FormGroup,\r\n  FormHelperText,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../../store\";\r\nimport { resetErrorState, signUpUser } from \"./sessionSlice\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n\r\nfunction Signup() {\r\n  const emailRef = useRef<HTMLInputElement>();\r\n  const passwordRef = useRef<HTMLInputElement>();\r\n  const passwordConfirmationRef = useRef<HTMLInputElement>();\r\n  const errorMessages = useSelector(\r\n    (state: RootState) => state.session.errorMessages\r\n  );\r\n\r\n  const [errors, setErrors] = useState<Array<string>>([]);\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const loading = false;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    emailRef?.current?.focus();\r\n    if (errorMessages !== undefined) {\r\n      setErrors(errorMessages);\r\n      dispatch(resetErrorState());\r\n    }\r\n  }, []);\r\n\r\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    setErrors([]);\r\n    if (\r\n      emailRef?.current === undefined ||\r\n      emailRef.current.value === \"\" ||\r\n      passwordRef?.current === undefined ||\r\n      passwordRef.current.value === \"\" ||\r\n      passwordConfirmationRef?.current === undefined ||\r\n      passwordConfirmationRef.current.value === \"\"\r\n    ) {\r\n      return setErrors([\"Please fill out all fields\"]);\r\n    }\r\n    if (passwordRef.current.value !== passwordConfirmationRef.current.value) {\r\n      return setErrors([\"Passwords do not match\"]);\r\n    }\r\n    const payload = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n    const response = (await dispatch(signUpUser(payload))) as any;\r\n\r\n    console.log(response);\r\n    if (errorMessages.length > 0) {\r\n      navigate(\"/\");\r\n    } else {\r\n      return setErrors(errorMessages);\r\n    }\r\n  }\r\n\r\n  const passwordInput = (\r\n    <OutlinedInput\r\n      id=\"password\"\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      inputRef={passwordRef}\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            aria-label=\"toggle password visibility\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            onMouseDown={() => setShowPassword(!showPassword)}\r\n            edge=\"end\"\r\n          >\r\n            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n\r\n  const passwordConfirmationInput = (\r\n    <OutlinedInput\r\n      id=\"password-confirmation\"\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      inputRef={passwordConfirmationRef}\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            aria-label=\"toggle password visibility\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            onMouseDown={() => setShowPassword(!showPassword)}\r\n            edge=\"end\"\r\n          >\r\n            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <Box\r\n            sx={{\r\n              marginTop: 8,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          ></Box>\r\n        </Container>\r\n      </ThemeProvider>\r\n\r\n      {/* ###########new cod induced */}\r\n\r\n      <section style={{ marginTop: \"2em\" }}>\r\n        <Container maxWidth=\"md\">\r\n          <Card sx={{ boxShadow: 1, maxWidth: \"md\" }}>\r\n            <CardContent>\r\n              <Container maxWidth=\"sm\">\r\n                <Typography variant=\"h2\" color=\"text.primary\" gutterBottom>\r\n                  Sign Up\r\n                </Typography>\r\n                {errors.length > 0 ? (\r\n                  <Alert severity=\"error\" aria-live=\"assertive\">\r\n                    {errors.map((error, index) => {\r\n                      return <p key={`alert-${index}`}>{error}</p>;\r\n                    })}\r\n                  </Alert>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                <form onSubmit={handleSubmit}>\r\n                  <FormGroup\r\n                    row={true}\r\n                    id=\"email-group\"\r\n                    sx={{ marginTop: \"1em\" }}\r\n                  >\r\n                    <FormControl fullWidth>\r\n                      <InputLabel required htmlFor=\"email\" id=\"email-label\">\r\n                        Email Address\r\n                      </InputLabel>\r\n                      <Input id=\"email\" type=\"email\" inputRef={emailRef} />\r\n                      <FormHelperText id=\"email-helper-text\">\r\n                        We&apos;ll never share your email.\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                  <FormGroup\r\n                    row={true}\r\n                    id=\"password-group\"\r\n                    sx={{ marginTop: \"1em\" }}\r\n                  >\r\n                    <FormControl fullWidth>\r\n                      <InputLabel\r\n                        required\r\n                        htmlFor=\"password\"\r\n                        id=\"password-label\"\r\n                      >\r\n                        Password\r\n                      </InputLabel>\r\n                      {passwordInput}\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                  <FormGroup\r\n                    row={true}\r\n                    id=\"password-confirmation-group\"\r\n                    sx={{ marginTop: \"1em\" }}\r\n                  >\r\n                    <FormControl fullWidth>\r\n                      <InputLabel\r\n                        required\r\n                        htmlFor=\"password-confirmation\"\r\n                        id=\"password-confirmation-label\"\r\n                      >\r\n                        Password Confirmation\r\n                      </InputLabel>\r\n                      {passwordConfirmationInput}\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                  <FormGroup\r\n                    row={true}\r\n                    id=\"submit-group\"\r\n                    sx={{ marginTop: \"1em\" }}\r\n                  >\r\n                    <FormControl fullWidth>\r\n                      <Button\r\n                        disabled={loading}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        id=\"submit-button\"\r\n                      >\r\n                        Create Account\r\n                      </Button>\r\n                    </FormControl>\r\n                  </FormGroup>\r\n                </form>\r\n              </Container>\r\n            </CardContent>\r\n            <Divider light={false} />\r\n            <CardActions\r\n              sx={{ marginTop: \"1em\", justifyContent: \"center\" }}\r\n              disableSpacing\r\n            >\r\n              <Box>\r\n                Already have an account? <Link to=\"/login\">Login!</Link>\r\n              </Box>\r\n            </CardActions>\r\n          </Card>\r\n        </Container>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}
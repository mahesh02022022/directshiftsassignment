{"ast":null,"code":"var _jsxFileName = \"C:\\\\ruby_prg\\\\7\\\\react-wishlist-series\\\\frontend\\\\src\\\\app\\\\features\\\\sessions\\\\UpdateProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Alert, Button, Card, CardContent, Container, FormControl, FormGroup, FormHelperText, IconButton, Input, InputAdornment, InputLabel, OutlinedInput, Typography } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { resetErrorState, updateProfile } from \"./sessionSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const emailConfirmationRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmationRef = useRef();\n  const currentPasswordRef = useRef();\n  const accessToken = useSelector(state => state.session.accessToken);\n  const errorMessages = useSelector(state => state.session.errorMessages);\n  const [errors, setErrors] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const loading = false;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var _emailRef$current;\n\n    emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.focus();\n\n    if (errorMessages !== undefined) {\n      setErrors(errorMessages);\n      dispatch(resetErrorState());\n    }\n  }, []);\n\n  async function handleSubmit(event) {\n    var _emailRef$current2, _passwordRef$current, _currentPasswordRef$c, _emailRef$current4, _passwordRef$current3;\n\n    event.preventDefault();\n    setErrors([]);\n    const shouldUpdateEmail = (emailRef === null || emailRef === void 0 ? void 0 : emailRef.current) !== undefined && (emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current2 = emailRef.current) === null || _emailRef$current2 === void 0 ? void 0 : _emailRef$current2.value) !== \"\";\n    const shouldUpdatePassword = (passwordRef === null || passwordRef === void 0 ? void 0 : passwordRef.current) !== undefined && (passwordRef === null || passwordRef === void 0 ? void 0 : (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value) !== \"\";\n    const shouldUpdateProfile = shouldUpdateEmail || shouldUpdatePassword;\n\n    if (!shouldUpdateProfile) {\n      navigate(\"/\");\n    }\n\n    if (shouldUpdateEmail) {\n      var _emailRef$current3, _emailConfirmationRef;\n\n      if ((emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current3 = emailRef.current) === null || _emailRef$current3 === void 0 ? void 0 : _emailRef$current3.value) !== (emailConfirmationRef === null || emailConfirmationRef === void 0 ? void 0 : (_emailConfirmationRef = emailConfirmationRef.current) === null || _emailConfirmationRef === void 0 ? void 0 : _emailConfirmationRef.value)) {\n        setErrors([\"Emails do not match\"]);\n      }\n    }\n\n    if (shouldUpdatePassword) {\n      var _passwordRef$current2, _passwordConfirmation;\n\n      if ((passwordRef === null || passwordRef === void 0 ? void 0 : (_passwordRef$current2 = passwordRef.current) === null || _passwordRef$current2 === void 0 ? void 0 : _passwordRef$current2.value) !== (passwordConfirmationRef === null || passwordConfirmationRef === void 0 ? void 0 : (_passwordConfirmation = passwordConfirmationRef.current) === null || _passwordConfirmation === void 0 ? void 0 : _passwordConfirmation.value)) {\n        setErrors(errors => [...errors, \"Passwords do not match\"]);\n      }\n    }\n\n    if ((currentPasswordRef === null || currentPasswordRef === void 0 ? void 0 : (_currentPasswordRef$c = currentPasswordRef.current) === null || _currentPasswordRef$c === void 0 ? void 0 : _currentPasswordRef$c.value) === undefined || currentPasswordRef.current.value === \"\") {\n      setErrors(errors => [...errors, \"Please enter your current password to confirm your changes\"]);\n    }\n\n    if (errors.length > 0) {\n      return errors;\n    }\n\n    const payload = {\n      email: emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current4 = emailRef.current) === null || _emailRef$current4 === void 0 ? void 0 : _emailRef$current4.value,\n      token: accessToken,\n      password: passwordRef === null || passwordRef === void 0 ? void 0 : (_passwordRef$current3 = passwordRef.current) === null || _passwordRef$current3 === void 0 ? void 0 : _passwordRef$current3.value,\n      currentPassword: currentPasswordRef.current.value\n    };\n    const response = await dispatch(updateProfile(payload));\n    console.log(response);\n\n    if (response.error) {\n      return setErrors(response.error);\n    } else {\n      navigate(\"/\");\n    }\n  }\n\n  const passwordInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password\",\n    label: \"Password\",\n    variant: \"Password\",\n    type: showPassword ? \"text\" : \"password\",\n    inputRef: passwordRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n\n  const passwordConfirmationInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password-confirmation\",\n    type: showPassword ? \"text\" : \"password\",\n    inputRef: passwordConfirmationRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n\n  const currentPasswordInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"current-password-confirmation\",\n    type: showCurrentPassword ? \"text\" : \"password\",\n    inputRef: currentPasswordRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowCurrentPassword(!showCurrentPassword),\n        onMouseDown: () => setShowCurrentPassword(!showCurrentPassword),\n        edge: \"end\",\n        children: showCurrentPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      marginTop: \"2em\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          boxShadow: 1,\n          maxWidth: \"md\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              color: \"text.primary\",\n              gutterBottom: true,\n              children: \"Update Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              \"aria-live\": \"assertive\",\n              children: errors.map((error, index) => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: error\n                }, `alert-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"email-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"email\",\n                    id: \"email-label\",\n                    children: \"Email Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"email\",\n                    type: \"email\",\n                    inputRef: emailRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    id: \"email-helper-text\",\n                    children: \"Enter current email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"email-confirmation-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"email-confirmation\",\n                    id: \"email-confirmation-label\",\n                    children: \"Email Address Confirmation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"email-confirmation\",\n                    type: \"email\",\n                    inputRef: emailConfirmationRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    id: \"email-confirmation-helper-text\",\n                    children: \"Enter new email again\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"password-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"password\",\n                    id: \"password-label\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this), passwordInput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"password-confirmation-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"password-confirmation\",\n                    id: \"password-confirmation-label\",\n                    children: \"Password Confirmation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this), passwordConfirmationInput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"current-password-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    required: true,\n                    htmlFor: \"current-password\",\n                    id: \"current-password-label\",\n                    children: \"Current Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this), currentPasswordInput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"submit-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: loading,\n                    variant: \"contained\",\n                    color: \"primary\",\n                    type: \"submit\",\n                    id: \"submit-button\",\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateProfile, \"wXFNrgmD9d1wDBTKPjf9UrxDN6A=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useDispatch];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["C:/ruby_prg/7/react-wishlist-series/frontend/src/app/features/sessions/UpdateProfile.tsx"],"names":["Visibility","VisibilityOff","Alert","Button","Card","CardContent","Container","FormControl","FormGroup","FormHelperText","IconButton","Input","InputAdornment","InputLabel","OutlinedInput","Typography","useEffect","useRef","useState","useDispatch","useSelector","useNavigate","resetErrorState","updateProfile","UpdateProfile","emailRef","emailConfirmationRef","passwordRef","passwordConfirmationRef","currentPasswordRef","accessToken","state","session","errorMessages","errors","setErrors","showPassword","setShowPassword","showCurrentPassword","setShowCurrentPassword","loading","navigate","dispatch","current","focus","undefined","handleSubmit","event","preventDefault","shouldUpdateEmail","value","shouldUpdatePassword","shouldUpdateProfile","length","payload","email","token","password","currentPassword","response","console","log","error","passwordInput","passwordConfirmationInput","currentPasswordInput","marginTop","boxShadow","maxWidth","map","index"],"mappings":"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","sourcesContent":["import { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  FormGroup,\r\n  FormHelperText,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../../store\";\r\nimport { resetErrorState, signUpUser, updateProfile } from \"./sessionSlice\";\r\n\r\nfunction UpdateProfile() {\r\n  const emailRef = useRef<HTMLInputElement>();\r\n  const emailConfirmationRef = useRef<HTMLInputElement>();\r\n  const passwordRef = useRef<HTMLInputElement>();\r\n  const passwordConfirmationRef = useRef<HTMLInputElement>();\r\n  const currentPasswordRef = useRef<HTMLInputElement>();\r\n\r\n  const accessToken = useSelector(\r\n    (state: RootState) => state.session.accessToken\r\n  );\r\n  const errorMessages = useSelector(\r\n    (state: RootState) => state.session.errorMessages\r\n  );\r\n\r\n  const [errors, setErrors] = useState<Array<string>>([]);\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const [showCurrentPassword, setShowCurrentPassword] =\r\n    useState<boolean>(false);\r\n  const loading = false;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    emailRef?.current?.focus();\r\n    if (errorMessages !== undefined) {\r\n      setErrors(errorMessages);\r\n      dispatch(resetErrorState());\r\n    }\r\n  }, []);\r\n\r\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    setErrors([]);\r\n    const shouldUpdateEmail =\r\n      emailRef?.current !== undefined && emailRef?.current?.value !== \"\";\r\n    const shouldUpdatePassword =\r\n      passwordRef?.current !== undefined && passwordRef?.current?.value !== \"\";\r\n    const shouldUpdateProfile = shouldUpdateEmail || shouldUpdatePassword;\r\n    if (!shouldUpdateProfile) {\r\n      navigate(\"/\");\r\n    }\r\n    if (shouldUpdateEmail) {\r\n      if (emailRef?.current?.value !== emailConfirmationRef?.current?.value) {\r\n        setErrors([\"Emails do not match\"]);\r\n      }\r\n    }\r\n\r\n    if (shouldUpdatePassword) {\r\n      if (\r\n        passwordRef?.current?.value !== passwordConfirmationRef?.current?.value\r\n      ) {\r\n        setErrors((errors) => [...errors, \"Passwords do not match\"]);\r\n      }\r\n    }\r\n    if (\r\n      currentPasswordRef?.current?.value === undefined ||\r\n      currentPasswordRef.current.value === \"\"\r\n    ) {\r\n      setErrors((errors) => [\r\n        ...errors,\r\n        \"Please enter your current password to confirm your changes\",\r\n      ]);\r\n    }\r\n    if (errors.length > 0) {\r\n      return errors;\r\n    }\r\n\r\n    const payload = {\r\n      email: emailRef?.current?.value,\r\n      token: accessToken,\r\n      password: passwordRef?.current?.value,\r\n      currentPassword: currentPasswordRef!.current!.value,\r\n    };\r\n    const response = (await dispatch(updateProfile(payload))) as any;\r\n\r\n    console.log(response);\r\n    if (response.error) {\r\n      return setErrors(response.error);\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  }\r\n\r\n  const passwordInput = (\r\n    <OutlinedInput\r\n      id=\"password\"\r\n      label=\"Password\"\r\n      variant=\"Password\"\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      inputRef={passwordRef}\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            aria-label=\"toggle password visibility\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            onMouseDown={() => setShowPassword(!showPassword)}\r\n            edge=\"end\"\r\n          >\r\n            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n\r\n  const passwordConfirmationInput = (\r\n    <OutlinedInput\r\n      id=\"password-confirmation\"\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      inputRef={passwordConfirmationRef}\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            aria-label=\"toggle password visibility\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            onMouseDown={() => setShowPassword(!showPassword)}\r\n            edge=\"end\"\r\n          >\r\n            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n\r\n  const currentPasswordInput = (\r\n    <OutlinedInput\r\n      id=\"current-password-confirmation\"\r\n      type={showCurrentPassword ? \"text\" : \"password\"}\r\n      inputRef={currentPasswordRef}\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            aria-label=\"toggle password visibility\"\r\n            onClick={() => setShowCurrentPassword(!showCurrentPassword)}\r\n            onMouseDown={() => setShowCurrentPassword(!showCurrentPassword)}\r\n            edge=\"end\"\r\n          >\r\n            {showCurrentPassword ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n\r\n  return (\r\n    <section style={{ marginTop: \"2em\" }}>\r\n      <Container maxWidth=\"md\">\r\n        <Card sx={{ boxShadow: 1, maxWidth: \"md\" }}>\r\n          <CardContent>\r\n            <Container maxWidth=\"sm\">\r\n              <Typography variant=\"h2\" color=\"text.primary\" gutterBottom>\r\n                Update Profile\r\n              </Typography>\r\n              {errors.length > 0 ? (\r\n                <Alert severity=\"error\" aria-live=\"assertive\">\r\n                  {errors.map((error, index) => {\r\n                    return <p key={`alert-${index}`}>{error}</p>;\r\n                  })}\r\n                </Alert>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <form onSubmit={handleSubmit}>\r\n                <FormGroup\r\n                  row={true}\r\n                  id=\"email-group\"\r\n                  sx={{ marginTop: \"1em\" }}\r\n                >\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"email\" id=\"email-label\">\r\n                      Email Address\r\n                    </InputLabel>\r\n                    <Input id=\"email\" type=\"email\" inputRef={emailRef} />\r\n                    <FormHelperText id=\"email-helper-text\">\r\n                      Enter current email\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  row={true}\r\n                  id=\"email-confirmation-group\"\r\n                  sx={{ marginTop: \"1em\" }}\r\n                >\r\n                  <FormControl fullWidth>\r\n                    <InputLabel\r\n                      htmlFor=\"email-confirmation\"\r\n                      id=\"email-confirmation-label\"\r\n                    >\r\n                      Email Address Confirmation\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"email-confirmation\"\r\n                      type=\"email\"\r\n                      inputRef={emailConfirmationRef}\r\n                    />\r\n                    <FormHelperText id=\"email-confirmation-helper-text\">\r\n                      Enter new email again\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  row={true}\r\n                  id=\"password-group\"\r\n                  sx={{ marginTop: \"1em\" }}\r\n                >\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"password\" id=\"password-label\">\r\n                      Password\r\n                    </InputLabel>\r\n                    {passwordInput}\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  row={true}\r\n                  id=\"password-confirmation-group\"\r\n                  sx={{ marginTop: \"1em\" }}\r\n                >\r\n                  <FormControl fullWidth>\r\n                    <InputLabel\r\n                      htmlFor=\"password-confirmation\"\r\n                      id=\"password-confirmation-label\"\r\n                    >\r\n                      Password Confirmation\r\n                    </InputLabel>\r\n                    {passwordConfirmationInput}\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  row={true}\r\n                  id=\"current-password-group\"\r\n                  sx={{ marginTop: \"1em\" }}\r\n                >\r\n                  <FormControl fullWidth>\r\n                    <InputLabel\r\n                      required\r\n                      htmlFor=\"current-password\"\r\n                      id=\"current-password-label\"\r\n                    >\r\n                      Current Password\r\n                    </InputLabel>\r\n                    {currentPasswordInput}\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  row={true}\r\n                  id=\"submit-group\"\r\n                  sx={{ marginTop: \"1em\" }}\r\n                >\r\n                  <FormControl fullWidth>\r\n                    <Button\r\n                      disabled={loading}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      id=\"submit-button\"\r\n                    >\r\n                      Save Changes\r\n                    </Button>\r\n                  </FormControl>\r\n                </FormGroup>\r\n              </form>\r\n            </Container>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"C:/ruby_prg/7/react-wishlist-series/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/ruby_prg/7/react-wishlist-series/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\ruby_prg\\\\7\\\\react-wishlist-series\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";import{createUserWithEmailAndPassword,getCurrentUser,loginWithEmailAndPassword,logoutUserWithToken,requestAccessTokenWithRefreshToken,updateUserProfile}from\"../../api/sessionAPI\";var initialState={currentUser:{id:undefined,email:undefined,role:undefined,createdAt:undefined},loading:true,error:false,errorMessages:[],accessToken:undefined,refreshToken:getRefreshToken(),expiresIn:undefined,tokenType:undefined};// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport var signUpUser=createAsyncThunk(\"session/signUpUser\",/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload,_ref){var rejectWithValue,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:rejectWithValue=_ref.rejectWithValue;_context.next=3;return createUserWithEmailAndPassword(payload.email,payload.password);case 3:response=_context.sent;if(!response.errors){_context.next=6;break;}return _context.abrupt(\"return\",rejectWithValue(response));case 6:return _context.abrupt(\"return\",response);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());export var updateProfile=createAsyncThunk(\"session/updateProfile\",/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload,_ref3){var rejectWithValue,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:rejectWithValue=_ref3.rejectWithValue;_context2.next=3;return updateUserProfile(payload.currentPassword,payload.token,payload===null||payload===void 0?void 0:payload.email,payload===null||payload===void 0?void 0:payload.password);case 3:response=_context2.sent;if(!response.errors){_context2.next=6;break;}return _context2.abrupt(\"return\",rejectWithValue(response));case 6:return _context2.abrupt(\"return\",response);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref4.apply(this,arguments);};}());export var loginUser=createAsyncThunk(\"session/loginUser\",/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(payload,_ref5){var rejectWithValue,loginResponse,userResponse,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:rejectWithValue=_ref5.rejectWithValue;_context3.next=3;return loginWithEmailAndPassword(payload.email,payload.password);case 3:loginResponse=_context3.sent;if(!loginResponse.error){_context3.next=6;break;}return _context3.abrupt(\"return\",rejectWithValue(loginResponse));case 6:_context3.next=8;return getCurrentUser(loginResponse.access_token);case 8:userResponse=_context3.sent;if(!userResponse.error){_context3.next=11;break;}return _context3.abrupt(\"return\",rejectWithValue(userResponse.data));case 11:response=_objectSpread(_objectSpread({},loginResponse),userResponse);// The value we return becomes the `fulfilled` action payload\nreturn _context3.abrupt(\"return\",response);case 13:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref6.apply(this,arguments);};}());export var logoutUser=createAsyncThunk(\"session/logoutUser\",/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(payload,_ref7){var rejectWithValue,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:rejectWithValue=_ref7.rejectWithValue;_context4.next=3;return logoutUserWithToken(payload);case 3:response=_context4.sent;// if response has errors rejectwithvalue\nconsole.log(response);if(!response.error){_context4.next=7;break;}return _context4.abrupt(\"return\",rejectWithValue(response));case 7:return _context4.abrupt(\"return\",response);case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x7,_x8){return _ref8.apply(this,arguments);};}());export var refreshAccessToken=createAsyncThunk(\"session/refreshAccessToken\",/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(refreshToken,_ref9){var rejectWithValue,refreshResponse,userResponse,response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:rejectWithValue=_ref9.rejectWithValue;if(refreshToken){_context5.next=3;break;}return _context5.abrupt(\"return\",rejectWithValue(\"No refresh token\"));case 3:_context5.next=5;return requestAccessTokenWithRefreshToken(refreshToken);case 5:refreshResponse=_context5.sent;if(!refreshResponse.error){_context5.next=8;break;}return _context5.abrupt(\"return\",rejectWithValue(refreshResponse.data));case 8:_context5.next=10;return getCurrentUser(refreshResponse.access_token);case 10:userResponse=_context5.sent;if(!userResponse.error){_context5.next=13;break;}return _context5.abrupt(\"return\",rejectWithValue(userResponse.data));case 13:response=_objectSpread(_objectSpread({},refreshResponse),userResponse);// The value we return becomes the `fulfilled` action payload\nreturn _context5.abrupt(\"return\",response);case 15:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x9,_x10){return _ref10.apply(this,arguments);};}());export var sessionSlice=createSlice({name:\"session\",initialState:initialState,// The `reducers` field lets us define reducers and generate associated actions\nreducers:{resetErrorState:function resetErrorState(state){state.error=false;state.errorMessages=[];}},// The `extraReducers` field lets the slice handle actions defined elsewhere,\n// including actions generated by createAsyncThunk or in other slices.\nextraReducers:function extraReducers(builder){builder.addCase(signUpUser.pending,function(state){state.loading=true;state.error=false;state.errorMessages=[];}).addCase(signUpUser.fulfilled,function(state,action){state.accessToken=action.payload.access_token;state.refreshToken=action.payload.refresh_token;state.expiresIn=action.payload.expires_in;state.tokenType=action.payload.token_type;state.currentUser={id:action.payload.id,email:action.payload.email,role:action.payload.role,createdAt:action.payload.created_at};storeRefreshToken(action.payload.refresh_token);state.loading=false;state.error=false;state.errorMessages=[];}).addCase(signUpUser.rejected,function(state,action){state.loading=false;state.error=true;state.errorMessages=action.payload.errors;}).addCase(loginUser.pending,function(state){state.loading=true;state.error=false;state.errorMessages=[];}).addCase(loginUser.fulfilled,function(state,action){state.accessToken=action.payload.access_token;state.refreshToken=action.payload.refresh_token;state.expiresIn=action.payload.expires_in;state.currentUser={id:action.payload.id,email:action.payload.email,role:action.payload.role,createdAt:action.payload.created_at};storeRefreshToken(action.payload.refresh_token);state.loading=false;state.error=false;state.errorMessages=[];}).addCase(loginUser.rejected,function(state,action){state.loading=false;state.error=true;state.errorMessages=[\"Invalid credentials. Did you enter them correctly?\"];}).addCase(refreshAccessToken.pending,function(state){state.loading=true;state.error=false;state.errorMessages=[];}).addCase(refreshAccessToken.fulfilled,function(state,action){state.accessToken=action.payload.access_token;state.refreshToken=action.payload.refresh_token;state.expiresIn=action.payload.expires_in;state.currentUser={id:action.payload.id,email:action.payload.email,role:action.payload.role,createdAt:action.payload.created_at};storeRefreshToken(action.payload.refresh_token);state.loading=false;state.error=false;state.errorMessages=[];}).addCase(refreshAccessToken.rejected,function(state,action){state.loading=false;state.error=true;}).addCase(logoutUser.pending,function(state){state.loading=true;state.error=false;state.errorMessages=[];}).addCase(logoutUser.fulfilled,function(state,action){state.currentUser={id:undefined,email:undefined,role:undefined,createdAt:undefined};state.accessToken=undefined;state.refreshToken=undefined;state.expiresIn=undefined;state.tokenType=undefined;removeRefreshToken();state.loading=false;state.error=false;state.errorMessages=[];}).addCase(logoutUser.rejected,function(state,action){state.loading=false;state.error=true;state.errorMessages=[action.payload.error];}).addCase(updateProfile.pending,function(state){state.loading=true;state.error=false;state.errorMessages=[];}).addCase(updateProfile.fulfilled,function(state,action){state.accessToken=action.payload.access_token;state.refreshToken=action.payload.refresh_token;state.expiresIn=action.payload.expires_in;state.tokenType=action.payload.token_type;state.currentUser={id:action.payload.id,email:action.payload.email,role:action.payload.role,createdAt:action.payload.created_at};storeRefreshToken(action.payload.refresh_token);state.loading=false;state.error=false;state.errorMessages=[];}).addCase(updateProfile.rejected,function(state,action){state.loading=false;state.error=true;state.errorMessages=action.payload.errors;});}});var resetErrorState=sessionSlice.actions.resetErrorState;// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\n// export const selectCount = (state: RootState) => state.counter.value;\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport{resetErrorState};export default sessionSlice.reducer;function storeRefreshToken(token){localStorage.setItem(\"refreshToken\",token);}function removeRefreshToken(){localStorage.removeItem(\"refreshToken\");}function getRefreshToken(){return localStorage.getItem(\"refreshToken\");}","map":{"version":3,"sources":["C:/ruby_prg/7/react-wishlist-series/frontend/src/app/features/sessions/sessionSlice.tsx"],"names":["createAsyncThunk","createSlice","createUserWithEmailAndPassword","getCurrentUser","loginWithEmailAndPassword","logoutUserWithToken","requestAccessTokenWithRefreshToken","updateUserProfile","initialState","currentUser","id","undefined","email","role","createdAt","loading","error","errorMessages","accessToken","refreshToken","getRefreshToken","expiresIn","tokenType","signUpUser","payload","rejectWithValue","password","response","errors","updateProfile","currentPassword","token","loginUser","loginResponse","access_token","userResponse","data","logoutUser","console","log","refreshAccessToken","refreshResponse","sessionSlice","name","reducers","resetErrorState","state","extraReducers","builder","addCase","pending","fulfilled","action","refresh_token","expires_in","token_type","created_at","storeRefreshToken","rejected","removeRefreshToken","actions","reducer","localStorage","setItem","removeItem","getItem"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { createUserWithEmailAndPassword, getCurrentUser, loginWithEmailAndPassword, logoutUserWithToken, requestAccessTokenWithRefreshToken, updateUserProfile } from \"../../api/sessionAPI\";\r\nimport { RootState, AppThunk } from \"../../store\";\r\n\r\n\r\nexport interface User {\r\n  id?: string;\r\n  email?: string;\r\n  role?: string;\r\n  createdAt?: string;\r\n}\r\n\r\nexport interface UserLoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface UserUpdateData {\r\n  currentPassword: string;\r\n  token: string | undefined;\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\ninterface AuthState {\r\n  currentUser?: User;\r\n  loading: boolean;\r\n  error: boolean;\r\n  errorMessages: string[];\r\n  accessToken?: string;\r\n  refreshToken?: string | null;\r\n  expiresIn?: number;\r\n  tokenType?: string;\r\n  currentRoute?: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  currentUser: { \r\n    id: undefined,\r\n    email: undefined,\r\n    role: undefined,\r\n    createdAt: undefined\r\n  },\r\n  loading: true,\r\n  error: false,\r\n  errorMessages: [],\r\n  accessToken: undefined,\r\n  refreshToken: getRefreshToken(),\r\n  expiresIn: undefined,\r\n  tokenType: undefined\r\n}\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const signUpUser = createAsyncThunk(\r\n  \"session/signUpUser\",\r\n  async (payload: UserLoginData, { rejectWithValue }) => {\r\n    const response = await createUserWithEmailAndPassword(\r\n      payload.email, \r\n      payload.password\r\n      );\r\n    if (response.errors) {\r\n      // The value we return becomes the `rejected` action payload\r\n      return rejectWithValue(response);\r\n    }\r\n    \r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const updateProfile = createAsyncThunk(\r\n  \"session/updateProfile\",\r\n  async (payload: UserUpdateData, { rejectWithValue }) => {\r\n    const response = await updateUserProfile(\r\n      payload.currentPassword,\r\n      payload.token,\r\n      payload?.email,\r\n      payload?.password\r\n    );\r\n    if (response.errors) {\r\n      // The value we return becomes the `rejected` action payload\r\n      return rejectWithValue(response);\r\n    }\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const loginUser = createAsyncThunk(\r\n  \"session/loginUser\",\r\n  async (payload: UserLoginData, { rejectWithValue }) => {\r\n    const loginResponse = await loginWithEmailAndPassword(\r\n      payload.email,\r\n      payload.password\r\n    );\r\n    if (loginResponse.error) {\r\n      // The value we return becomes the `rejected` action payload\r\n      return rejectWithValue(loginResponse);\r\n    }\r\n    const userResponse = await getCurrentUser(loginResponse.access_token);\r\n    if (userResponse.error) {\r\n      // The value we return becomes the `rejected` action payload\r\n      return rejectWithValue(userResponse.data);\r\n    }\r\n    const response = {\r\n      ...loginResponse,\r\n      ...userResponse,\r\n    };\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n  \"session/logoutUser\",\r\n  async (payload: string, { rejectWithValue }) => {\r\n    const response = await logoutUserWithToken(payload);\r\n    // if response has errors rejectwithvalue\r\n    console.log(response);\r\n    if (response.error) {\r\n      // The value we return becomes the `rejected` action payload\r\n      return rejectWithValue(response);\r\n    }\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const refreshAccessToken = createAsyncThunk(\r\n  \"session/refreshAccessToken\",\r\n  async (refreshToken: string | undefined | null, { rejectWithValue }) => {\r\n    if (!refreshToken) {\r\n      return rejectWithValue(\"No refresh token\");\r\n    }\r\n\r\n    const refreshResponse = await requestAccessTokenWithRefreshToken(\r\n      refreshToken\r\n    );\r\n    if (refreshResponse.error) {\r\n      // The value we return becomes the `rejected` action payload\r\n      return rejectWithValue(refreshResponse.data);\r\n    }\r\n    const userResponse = await getCurrentUser(refreshResponse.access_token);\r\n    if (userResponse.error) {\r\n      // The value we return becomes the `rejected` action payload\r\n      return rejectWithValue(userResponse.data);\r\n    }\r\n    const response = {\r\n      ...refreshResponse,\r\n      ...userResponse,\r\n    };\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response;\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const sessionSlice = createSlice({\r\n  name: \"session\",\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    resetErrorState: (state) => {\r\n      state.error = false;\r\n      state.errorMessages = [];\r\n    }\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(signUpUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(signUpUser.fulfilled, (state, action: any) => {\r\n        state.accessToken = action.payload.access_token;\r\n        state.refreshToken = action.payload.refresh_token;\r\n        state.expiresIn = action.payload.expires_in;\r\n        state.tokenType = action.payload.token_type;\r\n        state.currentUser = {\r\n          id: action.payload.id,\r\n          email: action.payload.email,\r\n          role: action.payload.role,\r\n          createdAt: action.payload.created_at,\r\n        };\r\n        storeRefreshToken(action.payload.refresh_token);\r\n\r\n        state.loading = false;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(signUpUser.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n        state.errorMessages = action.payload.errors;\r\n      }).addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action: any) => {\r\n        state.accessToken = action.payload.access_token;\r\n        state.refreshToken = action.payload.refresh_token;\r\n        state.expiresIn = action.payload.expires_in;\r\n        state.currentUser = {\r\n          id: action.payload.id,\r\n          email: action.payload.email,\r\n          role: action.payload.role,\r\n          createdAt: action.payload.created_at,\r\n        };\r\n        storeRefreshToken(action.payload.refresh_token);\r\n\r\n        state.loading = false;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(loginUser.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n        state.errorMessages = [\"Invalid credentials. Did you enter them correctly?\"];\r\n      }).addCase(refreshAccessToken.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(refreshAccessToken.fulfilled, (state, action: any) => {\r\n        state.accessToken = action.payload.access_token;\r\n        state.refreshToken = action.payload.refresh_token;\r\n        state.expiresIn = action.payload.expires_in;\r\n        state.currentUser = {\r\n          id: action.payload.id,\r\n          email: action.payload.email,\r\n          role: action.payload.role,\r\n          createdAt: action.payload.created_at,\r\n        };\r\n        storeRefreshToken(action.payload.refresh_token);\r\n\r\n        state.loading = false;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(refreshAccessToken.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n      })\r\n      .addCase(logoutUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(logoutUser.fulfilled, (state, action: any) => {\r\n        state.currentUser = {\r\n          id: undefined,\r\n          email: undefined,\r\n          role: undefined,\r\n          createdAt: undefined,\r\n        };\r\n        state.accessToken = undefined;\r\n        state.refreshToken = undefined;\r\n        state.expiresIn = undefined;\r\n        state.tokenType = undefined;\r\n        removeRefreshToken();\r\n\r\n        state.loading = false;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(logoutUser.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n        state.errorMessages = [action.payload.error];\r\n      })\r\n      .addCase(updateProfile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(updateProfile.fulfilled, (state, action: any) => {\r\n        state.accessToken = action.payload.access_token;\r\n        state.refreshToken = action.payload.refresh_token;\r\n        state.expiresIn = action.payload.expires_in;\r\n        state.tokenType = action.payload.token_type;\r\n        state.currentUser = {\r\n          id: action.payload.id,\r\n          email: action.payload.email,\r\n          role: action.payload.role,\r\n          createdAt: action.payload.created_at,\r\n        };\r\n        storeRefreshToken(action.payload.refresh_token);\r\n\r\n        state.loading = false;\r\n        state.error = false;\r\n        state.errorMessages = [];\r\n      })\r\n      .addCase(updateProfile.rejected, (state, action: any) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n        state.errorMessages = action.payload.errors;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetErrorState } = sessionSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\n// export const selectCount = (state: RootState) => state.counter.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\n\r\nexport default sessionSlice.reducer;\r\n\r\nfunction storeRefreshToken(token: string) {\r\n  localStorage.setItem(\"refreshToken\", token);\r\n}\r\n\r\nfunction removeRefreshToken() {\r\n  localStorage.removeItem(\"refreshToken\");\r\n}\r\n\r\nfunction getRefreshToken() {\r\n  return localStorage.getItem(\"refreshToken\");\r\n}"]},"metadata":{},"sourceType":"module"}
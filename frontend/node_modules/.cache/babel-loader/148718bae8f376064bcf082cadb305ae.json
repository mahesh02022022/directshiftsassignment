{"ast":null,"code":"var _jsxFileName = \"C:\\\\ruby_prg\\\\7\\\\react-wishlist-series\\\\frontend\\\\src\\\\app\\\\features\\\\sessions\\\\PersistLogin.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { refreshAccessToken } from './sessionSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PersistLogin() {\n  _s();\n\n  const loading = useSelector(state => state.session.loading);\n  const accessToken = useSelector(state => state.session.accessToken);\n  const refreshToken = useSelector(state => state.session.refreshToken);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function verifyRefreshToken() {\n      try {\n        dispatch(refreshAccessToken(refreshToken));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (!accessToken) {\n      verifyRefreshToken();\n    }\n  }, [accessToken, refreshToken]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 38\n    }, this)\n  }, void 0, false);\n}\n\n_s(PersistLogin, \"aO6H3wthuqPw327WVdsTUlFbcl8=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = PersistLogin;\nexport default PersistLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersistLogin\");","map":{"version":3,"sources":["C:/ruby_prg/7/react-wishlist-series/frontend/src/app/features/sessions/PersistLogin.tsx"],"names":["React","useEffect","useDispatch","useSelector","Outlet","refreshAccessToken","PersistLogin","loading","state","session","accessToken","refreshToken","dispatch","verifyRefreshToken","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,SAASC,kBAAT,QAAmC,gBAAnC;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAMC,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcF,OAArC,CAA3B;AACA,QAAMG,WAAW,GAAGP,WAAW,CAAEK,KAAD,IAAuBA,KAAK,CAACC,OAAN,CAAcC,WAAtC,CAA/B;AACA,QAAMC,YAAY,GAAGR,WAAW,CAAEK,KAAD,IAAuBA,KAAK,CAACC,OAAN,CAAcE,YAAtC,CAAhC;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASY,kBAAT,GAA8B;AAC5B,UAAI;AACFD,QAAAA,QAAQ,CAACP,kBAAkB,CAACM,YAAD,CAAnB,CAAR;AACD,OAFD,CAEE,OAAOG,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;;AACD,QAAI,CAACJ,WAAL,EAAkB;AAChBG,MAAAA,kBAAkB;AACnB;AACF,GAXQ,EAWN,CAACH,WAAD,EAAcC,YAAd,CAXM,CAAT;AAaA,sBACE;AAAA,cACGJ,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAuB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADjC,mBADF;AAKD;;GAxBQD,Y;UACSH,W,EACIA,W,EACCA,W,EACJD,W;;;KAJVI,Y;AA0BT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { RootState } from '../../store';\r\nimport { refreshAccessToken } from './sessionSlice';\r\n\r\nfunction PersistLogin() {\r\n  const loading = useSelector((state: RootState) => state.session.loading);\r\n  const accessToken = useSelector((state : RootState) => state.session.accessToken);\r\n  const refreshToken = useSelector((state : RootState) => state.session.refreshToken);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    function verifyRefreshToken() {\r\n      try {\r\n        dispatch(refreshAccessToken(refreshToken));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    if (!accessToken) {\r\n      verifyRefreshToken();\r\n    }\r\n  }, [accessToken, refreshToken]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? <p>Loading...</p> : <Outlet />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersistLogin"]},"metadata":{},"sourceType":"module"}
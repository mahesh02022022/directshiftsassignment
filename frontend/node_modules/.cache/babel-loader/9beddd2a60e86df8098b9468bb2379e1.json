{"ast":null,"code":"import React from'react';import{useSelector}from'react-redux';import{Navigate,useLocation}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";function PublicOnlyRoute(_ref){var _location$state;var children=_ref.children;var accessToken=useSelector(function(state){return state.session.accessToken;});var loading=useSelector(function(state){return state.session.loading;});var location=useLocation();var fromLocation=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.from;var previousLocation=fromLocation?fromLocation:{pathname:'/'};if(!accessToken&&!loading){return children;}else if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}else if(accessToken&&!loading){return/*#__PURE__*/_jsx(Navigate,{to:previousLocation,state:{from:location},replace:true});}else{return/*#__PURE__*/_jsx(\"p\",{children:\"Something went wrong\"});}}export default PublicOnlyRoute;","map":{"version":3,"sources":["C:/ruby_prg/7/react-wishlist-series/frontend/src/app/features/routes/PublicOnlyRoute.tsx"],"names":["React","useSelector","Navigate","useLocation","PublicOnlyRoute","children","accessToken","state","session","loading","location","fromLocation","from","previousLocation","pathname"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,kBAAtC,C,2CAGA,QAASC,CAAAA,eAAT,MAA8C,wBAAnBC,CAAAA,QAAmB,MAAnBA,QAAmB,CAC5C,GAAMC,CAAAA,WAAW,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAuBA,CAAAA,KAAK,CAACC,OAAN,CAAcF,WAArC,EAAD,CAA/B,CACA,GAAMG,CAAAA,OAAO,CAAGR,WAAW,CAAC,SAACM,KAAD,QAAuBA,CAAAA,KAAK,CAACC,OAAN,CAAcC,OAArC,EAAD,CAA3B,CACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,YAAY,kBAAID,QAAQ,CAACH,KAAb,0CAAG,gBAAyBK,IAA9C,CACA,GAAMC,CAAAA,gBAAgB,CAAGF,YAAY,CAAGA,YAAH,CAAkB,CAAEG,QAAQ,CAAE,GAAZ,CAAvD,CAEA,GAAI,CAACR,WAAD,EAAgB,CAACG,OAArB,CAA8B,CAC1B,MAAOJ,CAAAA,QAAP,CACH,CAFD,IAEO,IAAII,OAAJ,CAAa,CAChB,mBAAO,iCAAP,CACH,CAFM,IAEA,IAAIH,WAAW,EAAI,CAACG,OAApB,CAA6B,CAClC,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAEI,gBAAd,CAAgC,KAAK,CAAE,CAACD,IAAI,CAAEF,QAAP,CAAvC,CAAyD,OAAO,KAAhE,EAAP,CACD,CAFM,IAEA,CACH,mBAAO,2CAAP,CACH,CACF,CAED,cAAeN,CAAAA,eAAf","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { RootState } from '../../store';\r\n\r\nfunction PublicOnlyRoute({ children  } : any) {\r\n  const accessToken = useSelector((state : RootState) => state.session.accessToken); \r\n  const loading = useSelector((state : RootState) => state.session.loading);\r\n  const location = useLocation();\r\n  const fromLocation = (location.state as any)?.from;\r\n  const previousLocation = fromLocation ? fromLocation : { pathname: '/'};\r\n\r\n  if (!accessToken && !loading) {\r\n      return children;\r\n  } else if (loading) {\r\n      return <p>Loading...</p>;\r\n  } else if (accessToken && !loading) {\r\n    return <Navigate to={previousLocation} state={{from: location}} replace/>;\r\n  } else {\r\n      return <p>Something went wrong</p>;\r\n  }\r\n}\r\n\r\nexport default PublicOnlyRoute"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\ruby_prg\\\\7\\\\react-wishlist-series\\\\frontend\\\\src\\\\app\\\\features\\\\sessions\\\\Signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Alert, Box, Button, Card, CardActions, CardContent, Container, Divider, FormControl, FormGroup, FormHelperText, IconButton, Input, InputAdornment, InputLabel, OutlinedInput, Typography } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { resetErrorState, signUpUser } from \"./sessionSlice\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmationRef = useRef();\n  const errorMessages = useSelector(state => state.session.errorMessages);\n  const [errors, setErrors] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const loading = false;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var _emailRef$current;\n\n    emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.focus();\n\n    if (errorMessages !== undefined) {\n      setErrors(errorMessages);\n      dispatch(resetErrorState());\n    }\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setErrors([]);\n\n    if ((emailRef === null || emailRef === void 0 ? void 0 : emailRef.current) === undefined || emailRef.current.value === \"\" || (passwordRef === null || passwordRef === void 0 ? void 0 : passwordRef.current) === undefined || passwordRef.current.value === \"\" || (passwordConfirmationRef === null || passwordConfirmationRef === void 0 ? void 0 : passwordConfirmationRef.current) === undefined || passwordConfirmationRef.current.value === \"\") {\n      return setErrors([\"Please fill out all fields\"]);\n    }\n\n    if (passwordRef.current.value !== passwordConfirmationRef.current.value) {\n      return setErrors([\"Passwords do not match\"]);\n    }\n\n    const payload = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    const response = await dispatch(signUpUser(payload));\n    console.log(response);\n\n    if (errorMessages.length > 0) {\n      navigate(\"/\");\n    } else {\n      return setErrors(errorMessages);\n    }\n  }\n\n  const passwordInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password\",\n    type: showPassword ? \"text\" : \"password\",\n    inputRef: passwordRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n\n  const passwordConfirmationInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password-confirmation\",\n    type: showPassword ? \"text\" : \"password\",\n    inputRef: passwordConfirmationRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          style: {\n            marginTop: \"2em\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"md\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                boxShadow: 1,\n                maxWidth: \"md\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Container, {\n                  maxWidth: \"sm\",\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      m: 1,\n                      bgcolor: \"secondary.main\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h5\",\n                    children: \"Sign up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h2\",\n                    color: \"text.primary\",\n                    gutterBottom: true,\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n                    severity: \"error\",\n                    \"aria-live\": \"assertive\",\n                    children: errors.map((error, index) => {\n                      return /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: error\n                      }, `alert-${index}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 34\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmit,\n                    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                      row: true,\n                      id: \"email-group\",\n                      sx: {\n                        marginTop: \"1em\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        fullWidth: true,\n                        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                          required: true,\n                          htmlFor: \"email\",\n                          id: \"email-label\",\n                          children: \"Email Address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          id: \"email\",\n                          type: \"email\",\n                          inputRef: emailRef\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 173,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                          id: \"email-helper-text\",\n                          children: \"We'll never share your email.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      row: true,\n                      id: \"password-group\",\n                      sx: {\n                        marginTop: \"1em\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        fullWidth: true,\n                        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                          required: true,\n                          htmlFor: \"password\",\n                          id: \"password-label\",\n                          children: \"Password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 27\n                        }, this), passwordInput]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      row: true,\n                      id: \"password-confirmation-group\",\n                      sx: {\n                        marginTop: \"1em\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        fullWidth: true,\n                        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                          required: true,\n                          htmlFor: \"password-confirmation\",\n                          id: \"password-confirmation-label\",\n                          children: \"Password Confirmation\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 27\n                        }, this), passwordConfirmationInput]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                      row: true,\n                      id: \"submit-group\",\n                      sx: {\n                        marginTop: \"1em\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        fullWidth: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          disabled: loading,\n                          variant: \"contained\",\n                          color: \"primary\",\n                          type: \"submit\",\n                          id: \"submit-button\",\n                          children: \"Create Account\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                light: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                sx: {\n                  marginTop: \"1em\",\n                  justifyContent: \"center\"\n                },\n                disableSpacing: true,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/login\",\n                    children: \"Login!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 46\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Signup, \"o31B6Qtv9haX3ZStiZA6Tli99HU=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/ruby_prg/7/react-wishlist-series/frontend/src/app/features/sessions/Signup.tsx"],"names":["Visibility","VisibilityOff","Alert","Box","Button","Card","CardActions","CardContent","Container","Divider","FormControl","FormGroup","FormHelperText","IconButton","Input","InputAdornment","InputLabel","OutlinedInput","Typography","useEffect","useRef","useState","useDispatch","useSelector","Link","useNavigate","resetErrorState","signUpUser","Avatar","CssBaseline","LockOutlinedIcon","createTheme","ThemeProvider","theme","Signup","emailRef","passwordRef","passwordConfirmationRef","errorMessages","state","session","errors","setErrors","showPassword","setShowPassword","loading","navigate","dispatch","current","focus","undefined","handleSubmit","event","preventDefault","value","payload","email","password","response","console","log","length","passwordInput","passwordConfirmationInput","marginTop","boxShadow","maxWidth","m","bgcolor","map","error","index","justifyContent"],"mappings":"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","sourcesContent":["import { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  FormGroup,\r\n  FormHelperText,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../../store\";\r\nimport { resetErrorState, signUpUser } from \"./sessionSlice\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nconst theme = createTheme();\r\nfunction Signup() {\r\n  const emailRef = useRef<HTMLInputElement>();\r\n  const passwordRef = useRef<HTMLInputElement>();\r\n  const passwordConfirmationRef = useRef<HTMLInputElement>();\r\n  const errorMessages = useSelector(\r\n    (state: RootState) => state.session.errorMessages\r\n  );\r\n\r\n  const [errors, setErrors] = useState<Array<string>>([]);\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const loading = false;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    emailRef?.current?.focus();\r\n    if (errorMessages !== undefined) {\r\n      setErrors(errorMessages);\r\n      dispatch(resetErrorState());\r\n    }\r\n  }, []);\r\n\r\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    setErrors([]);\r\n    if (\r\n      emailRef?.current === undefined ||\r\n      emailRef.current.value === \"\" ||\r\n      passwordRef?.current === undefined ||\r\n      passwordRef.current.value === \"\" ||\r\n      passwordConfirmationRef?.current === undefined ||\r\n      passwordConfirmationRef.current.value === \"\"\r\n    ) {\r\n      return setErrors([\"Please fill out all fields\"]);\r\n    }\r\n    if (passwordRef.current.value !== passwordConfirmationRef.current.value) {\r\n      return setErrors([\"Passwords do not match\"]);\r\n    }\r\n    const payload = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n    const response = (await dispatch(signUpUser(payload))) as any;\r\n\r\n    console.log(response);\r\n    if (errorMessages.length > 0) {\r\n      navigate(\"/\");\r\n    } else {\r\n      return setErrors(errorMessages);\r\n    }\r\n  }\r\n\r\n  const passwordInput = (\r\n    <OutlinedInput\r\n      id=\"password\"\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      inputRef={passwordRef}\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            aria-label=\"toggle password visibility\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            onMouseDown={() => setShowPassword(!showPassword)}\r\n            edge=\"end\"\r\n          >\r\n            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n\r\n  const passwordConfirmationInput = (\r\n    <OutlinedInput\r\n      id=\"password-confirmation\"\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      inputRef={passwordConfirmationRef}\r\n      endAdornment={\r\n        <InputAdornment position=\"end\">\r\n          <IconButton\r\n            aria-label=\"toggle password visibility\"\r\n            onClick={() => setShowPassword(!showPassword)}\r\n            onMouseDown={() => setShowPassword(!showPassword)}\r\n            edge=\"end\"\r\n          >\r\n            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </InputAdornment>\r\n      }\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          {/* ###########new cod induced */}\r\n\r\n          <section style={{ marginTop: \"2em\" }}>\r\n            <Container maxWidth=\"md\">\r\n              <Card sx={{ boxShadow: 1, maxWidth: \"md\" }}>\r\n                <CardContent>\r\n                  <Container maxWidth=\"sm\">\r\n                    <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                      <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                      Sign up\r\n                    </Typography>\r\n                    <Typography variant=\"h2\" color=\"text.primary\" gutterBottom>\r\n                      Sign Up\r\n                    </Typography>\r\n                    {errors.length > 0 ? (\r\n                      <Alert severity=\"error\" aria-live=\"assertive\">\r\n                        {errors.map((error, index) => {\r\n                          return <p key={`alert-${index}`}>{error}</p>;\r\n                        })}\r\n                      </Alert>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    <form onSubmit={handleSubmit}>\r\n                      <FormGroup\r\n                        row={true}\r\n                        id=\"email-group\"\r\n                        sx={{ marginTop: \"1em\" }}\r\n                      >\r\n                        <FormControl fullWidth>\r\n                          <InputLabel required htmlFor=\"email\" id=\"email-label\">\r\n                            Email Address\r\n                          </InputLabel>\r\n                          <Input id=\"email\" type=\"email\" inputRef={emailRef} />\r\n                          <FormHelperText id=\"email-helper-text\">\r\n                            We&apos;ll never share your email.\r\n                          </FormHelperText>\r\n                        </FormControl>\r\n                      </FormGroup>\r\n                      <FormGroup\r\n                        row={true}\r\n                        id=\"password-group\"\r\n                        sx={{ marginTop: \"1em\" }}\r\n                      >\r\n                        <FormControl fullWidth>\r\n                          <InputLabel\r\n                            required\r\n                            htmlFor=\"password\"\r\n                            id=\"password-label\"\r\n                          >\r\n                            Password\r\n                          </InputLabel>\r\n                          {passwordInput}\r\n                        </FormControl>\r\n                      </FormGroup>\r\n                      <FormGroup\r\n                        row={true}\r\n                        id=\"password-confirmation-group\"\r\n                        sx={{ marginTop: \"1em\" }}\r\n                      >\r\n                        <FormControl fullWidth>\r\n                          <InputLabel\r\n                            required\r\n                            htmlFor=\"password-confirmation\"\r\n                            id=\"password-confirmation-label\"\r\n                          >\r\n                            Password Confirmation\r\n                          </InputLabel>\r\n                          {passwordConfirmationInput}\r\n                        </FormControl>\r\n                      </FormGroup>\r\n                      <FormGroup\r\n                        row={true}\r\n                        id=\"submit-group\"\r\n                        sx={{ marginTop: \"1em\" }}\r\n                      >\r\n                        <FormControl fullWidth>\r\n                          <Button\r\n                            disabled={loading}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            id=\"submit-button\"\r\n                          >\r\n                            Create Account\r\n                          </Button>\r\n                        </FormControl>\r\n                      </FormGroup>\r\n                    </form>\r\n                  </Container>\r\n                </CardContent>\r\n                <Divider light={false} />\r\n                <CardActions\r\n                  sx={{ marginTop: \"1em\", justifyContent: \"center\" }}\r\n                  disableSpacing\r\n                >\r\n                  <Box>\r\n                    Already have an account? <Link to=\"/login\">Login!</Link>\r\n                  </Box>\r\n                </CardActions>\r\n              </Card>\r\n            </Container>\r\n          </section>\r\n\r\n          {/* ##############end line */}\r\n        </Container>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}
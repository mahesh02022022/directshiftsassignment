{"ast":null,"code":"var _jsxFileName = \"C:\\\\ruby_prg\\\\7\\\\react-wishlist-series\\\\frontend\\\\src\\\\app\\\\features\\\\sessions\\\\UpdateProfile.tsx\",\n    _s = $RefreshSig$();\n\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Alert, Button, Card, CardContent, Container, FormControl, FormGroup, FormHelperText, IconButton, Input, InputAdornment, InputLabel, OutlinedInput, Typography } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { resetErrorState, updateProfile } from \"./sessionSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const emailConfirmationRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmationRef = useRef();\n  const currentPasswordRef = useRef();\n  const accessToken = useSelector(state => state.session.accessToken);\n  const errorMessages = useSelector(state => state.session.errorMessages);\n  const [errors, setErrors] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const loading = false;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    var _emailRef$current;\n\n    emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.focus();\n\n    if (errorMessages !== undefined) {\n      setErrors(errorMessages);\n      dispatch(resetErrorState());\n    }\n  }, []);\n\n  async function handleSubmit(event) {\n    var _emailRef$current2, _passwordRef$current, _currentPasswordRef$c, _emailRef$current4, _passwordRef$current3;\n\n    event.preventDefault();\n    setErrors([]);\n    const shouldUpdateEmail = (emailRef === null || emailRef === void 0 ? void 0 : emailRef.current) !== undefined && (emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current2 = emailRef.current) === null || _emailRef$current2 === void 0 ? void 0 : _emailRef$current2.value) !== \"\";\n    const shouldUpdatePassword = (passwordRef === null || passwordRef === void 0 ? void 0 : passwordRef.current) !== undefined && (passwordRef === null || passwordRef === void 0 ? void 0 : (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value) !== \"\";\n    const shouldUpdateProfile = shouldUpdateEmail || shouldUpdatePassword;\n\n    if (!shouldUpdateProfile) {\n      navigate(\"/\");\n    }\n\n    if (shouldUpdateEmail) {\n      var _emailRef$current3, _emailConfirmationRef;\n\n      if ((emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current3 = emailRef.current) === null || _emailRef$current3 === void 0 ? void 0 : _emailRef$current3.value) !== (emailConfirmationRef === null || emailConfirmationRef === void 0 ? void 0 : (_emailConfirmationRef = emailConfirmationRef.current) === null || _emailConfirmationRef === void 0 ? void 0 : _emailConfirmationRef.value)) {\n        setErrors([\"Emails do not match\"]);\n      }\n    }\n\n    if (shouldUpdatePassword) {\n      var _passwordRef$current2, _passwordConfirmation;\n\n      if ((passwordRef === null || passwordRef === void 0 ? void 0 : (_passwordRef$current2 = passwordRef.current) === null || _passwordRef$current2 === void 0 ? void 0 : _passwordRef$current2.value) !== (passwordConfirmationRef === null || passwordConfirmationRef === void 0 ? void 0 : (_passwordConfirmation = passwordConfirmationRef.current) === null || _passwordConfirmation === void 0 ? void 0 : _passwordConfirmation.value)) {\n        setErrors(errors => [...errors, \"Passwords do not match\"]);\n      }\n    }\n\n    if ((currentPasswordRef === null || currentPasswordRef === void 0 ? void 0 : (_currentPasswordRef$c = currentPasswordRef.current) === null || _currentPasswordRef$c === void 0 ? void 0 : _currentPasswordRef$c.value) === undefined || currentPasswordRef.current.value === \"\") {\n      setErrors(errors => [...errors, \"Please enter your current password to confirm your changes\"]);\n    }\n\n    if (errors.length > 0) {\n      return errors;\n    }\n\n    const payload = {\n      email: emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current4 = emailRef.current) === null || _emailRef$current4 === void 0 ? void 0 : _emailRef$current4.value,\n      token: accessToken,\n      password: passwordRef === null || passwordRef === void 0 ? void 0 : (_passwordRef$current3 = passwordRef.current) === null || _passwordRef$current3 === void 0 ? void 0 : _passwordRef$current3.value,\n      currentPassword: currentPasswordRef.current.value\n    };\n    const response = await dispatch(updateProfile(payload));\n    console.log(response);\n\n    if (response.error) {\n      return setErrors(response.error);\n    } else {\n      navigate(\"/\");\n    }\n  }\n\n  const passwordInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password\",\n    type: showPassword ? 'text' : 'password',\n    inputRef: passwordRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 25\n  }, this);\n\n  const passwordConfirmationInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"password-confirmation\",\n    type: showPassword ? 'text' : 'password',\n    inputRef: passwordConfirmationRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowPassword(!showPassword),\n        onMouseDown: () => setShowPassword(!showPassword),\n        edge: \"end\",\n        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 37\n  }, this);\n\n  const currentPasswordInput = /*#__PURE__*/_jsxDEV(OutlinedInput, {\n    id: \"current-password-confirmation\",\n    type: showCurrentPassword ? 'text' : 'password',\n    inputRef: currentPasswordRef,\n    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n      position: \"end\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setShowCurrentPassword(!showCurrentPassword),\n        onMouseDown: () => setShowCurrentPassword(!showCurrentPassword),\n        edge: \"end\",\n        children: showCurrentPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 32\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      marginTop: \"2em\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          boxShadow: 1,\n          maxWidth: 'md'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h2\",\n              color: \"text.primary\",\n              gutterBottom: true,\n              children: \"Update Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              \"aria-live\": \"assertive\",\n              children: errors.map((error, index) => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: error\n                }, `alert-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"email-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"email\",\n                    id: \"email-label\",\n                    children: \"Email Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"email\",\n                    type: \"email\",\n                    inputRef: emailRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    id: \"email-helper-text\",\n                    children: \"Enter current email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"email-confirmation-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"email-confirmation\",\n                    id: \"email-confirmation-label\",\n                    children: \"Email Address Confirmation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"email-confirmation\",\n                    type: \"email\",\n                    inputRef: emailConfirmationRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    id: \"email-confirmation-helper-text\",\n                    children: \"Enter new email again\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"password-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"password\",\n                    id: \"password-label\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 21\n                  }, this), passwordInput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"password-confirmation-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"password-confirmation\",\n                    id: \"password-confirmation-label\",\n                    children: \"Password Confirmation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this), passwordConfirmationInput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"current-password-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    required: true,\n                    htmlFor: \"current-password\",\n                    id: \"current-password-label\",\n                    children: \"Current Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this), currentPasswordInput]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                row: true,\n                id: \"submit-group\",\n                sx: {\n                  marginTop: \"1em\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: loading,\n                    variant: \"contained\",\n                    color: \"primary\",\n                    type: \"submit\",\n                    id: \"submit-button\",\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateProfile, \"wXFNrgmD9d1wDBTKPjf9UrxDN6A=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useDispatch];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["C:/ruby_prg/7/react-wishlist-series/frontend/src/app/features/sessions/UpdateProfile.tsx"],"names":["Visibility","VisibilityOff","Alert","Button","Card","CardContent","Container","FormControl","FormGroup","FormHelperText","IconButton","Input","InputAdornment","InputLabel","OutlinedInput","Typography","useEffect","useRef","useState","useDispatch","useSelector","useNavigate","resetErrorState","updateProfile","UpdateProfile","emailRef","emailConfirmationRef","passwordRef","passwordConfirmationRef","currentPasswordRef","accessToken","state","session","errorMessages","errors","setErrors","showPassword","setShowPassword","showCurrentPassword","setShowCurrentPassword","loading","navigate","dispatch","current","focus","undefined","handleSubmit","event","preventDefault","shouldUpdateEmail","value","shouldUpdatePassword","shouldUpdateProfile","length","payload","email","token","password","currentPassword","response","console","log","error","passwordInput","passwordConfirmationInput","currentPasswordInput","marginTop","boxShadow","maxWidth","map","index"],"mappings":"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","sourcesContent":["import { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { Alert, Box, Button, Card, CardActions, CardContent, Container, Divider, FormControl, FormGroup, FormHelperText, IconButton, Input, InputAdornment, InputLabel, OutlinedInput, Typography } from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { RootState } from \"../../store\";\r\nimport { resetErrorState, signUpUser, updateProfile } from \"./sessionSlice\";\r\n\r\n\r\nfunction UpdateProfile() {\r\n  const emailRef = useRef<HTMLInputElement>();\r\n  const emailConfirmationRef = useRef<HTMLInputElement>();\r\n  const passwordRef = useRef<HTMLInputElement>();\r\n  const passwordConfirmationRef = useRef<HTMLInputElement>();\r\n  const currentPasswordRef = useRef<HTMLInputElement>();\r\n\r\n  const accessToken = useSelector((state: RootState) => state.session.accessToken);\r\n  const errorMessages = useSelector((state: RootState) => state.session.errorMessages);\r\n\r\n  const [errors, setErrors] = useState<Array<string>>([])\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n  const [showCurrentPassword, setShowCurrentPassword] = useState<boolean>(false);\r\n  const loading = false;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    emailRef?.current?.focus();\r\n    if (errorMessages !== undefined) {\r\n      setErrors(errorMessages);\r\n      dispatch(resetErrorState());\r\n    }\r\n  }, [])\r\n\r\n  async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    setErrors([]);\r\n    const shouldUpdateEmail = emailRef?.current !== undefined && emailRef?.current?.value !== \"\";\r\n    const shouldUpdatePassword = passwordRef?.current !== undefined && passwordRef?.current?.value !== \"\";\r\n    const shouldUpdateProfile = shouldUpdateEmail || shouldUpdatePassword;\r\n    if (!shouldUpdateProfile) {\r\n      navigate(\"/\");\r\n    }\r\n    if (shouldUpdateEmail) {\r\n      if (emailRef?.current?.value !== emailConfirmationRef?.current?.value) {\r\n        setErrors([\"Emails do not match\"])\r\n      }\r\n    }\r\n\r\n    if (shouldUpdatePassword) {\r\n      if (passwordRef?.current?.value !== passwordConfirmationRef?.current?.value) {\r\n        setErrors(errors => [...errors, \"Passwords do not match\"])\r\n      }\r\n    }\r\n    if (currentPasswordRef?.current?.value === undefined || currentPasswordRef.current.value === \"\") {\r\n      setErrors(errors => [...errors, \"Please enter your current password to confirm your changes\"])\r\n    }\r\n    if (errors.length > 0) {\r\n      return errors;\r\n    }\r\n\r\n    const payload = {\r\n      email: emailRef?.current?.value,\r\n      token: accessToken,\r\n      password: passwordRef?.current?.value,\r\n      currentPassword: currentPasswordRef!.current!.value\r\n    }\r\n    const response = await dispatch(updateProfile(payload)) as any;\r\n\r\n    console.log(response);\r\n    if (response.error) {\r\n      return setErrors(response.error);\r\n    } else {\r\n      navigate(\"/\")\r\n    }\r\n  }\r\n\r\n  const passwordInput = <OutlinedInput id=\"password\" type={showPassword ? 'text' : 'password'} inputRef={passwordRef} endAdornment={\r\n    <InputAdornment position=\"end\">\r\n      <IconButton\r\n        aria-label=\"toggle password visibility\"\r\n        onClick={() => setShowPassword(!showPassword)}\r\n        onMouseDown={() => setShowPassword(!showPassword)}\r\n        edge=\"end\">\r\n          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n      </IconButton>\r\n    </InputAdornment>\r\n  } />;\r\n\r\n  const passwordConfirmationInput = <OutlinedInput id=\"password-confirmation\" type={showPassword ? 'text' : 'password'} inputRef={passwordConfirmationRef} endAdornment={\r\n    <InputAdornment position=\"end\">\r\n      <IconButton\r\n        aria-label=\"toggle password visibility\"\r\n        onClick={() => setShowPassword(!showPassword)}\r\n        onMouseDown={() => setShowPassword(!showPassword)}\r\n        edge=\"end\">\r\n          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n      </IconButton>\r\n    </InputAdornment>\r\n  } />;\r\n\r\n  const currentPasswordInput = <OutlinedInput \r\n  id=\"current-password-confirmation\" \r\n  type={showCurrentPassword ? 'text' : 'password'} \r\n  inputRef={currentPasswordRef} \r\n  endAdornment={\r\n    <InputAdornment position=\"end\">\r\n      <IconButton\r\n        aria-label=\"toggle password visibility\"\r\n        onClick={() => setShowCurrentPassword(!showCurrentPassword)}\r\n        onMouseDown={() => setShowCurrentPassword(!showCurrentPassword)}\r\n        edge=\"end\">\r\n          {showCurrentPassword ? <Visibility /> : <VisibilityOff />}\r\n      </IconButton>\r\n    </InputAdornment>\r\n  } />;\r\n\r\n  return (\r\n    <section style={{marginTop:\"2em\"}}>\r\n      <Container maxWidth=\"md\">\r\n        <Card sx={{boxShadow:1, maxWidth: 'md'}}>\r\n          <CardContent>\r\n            <Container maxWidth=\"sm\">\r\n              <Typography variant=\"h2\" color=\"text.primary\" gutterBottom>\r\n                Update Profile\r\n              </Typography>\r\n              {errors.length > 0 ?\r\n                <Alert severity=\"error\" aria-live=\"assertive\">\r\n                  {errors.map((error, index) => {\r\n                    return <p key={`alert-${index}`}>\r\n                      {error}\r\n                    </p>\r\n                  })}\r\n                </Alert>\r\n              : <></>} \r\n              <form onSubmit={handleSubmit}>\r\n                <FormGroup row={true} id=\"email-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"email\" id=\"email-label\">Email Address</InputLabel>\r\n                    <Input id=\"email\" type=\"email\" inputRef={emailRef}/>\r\n                    <FormHelperText id=\"email-helper-text\">Enter current email</FormHelperText>\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup row={true} id=\"email-confirmation-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"email-confirmation\" id=\"email-confirmation-label\">Email Address Confirmation</InputLabel>\r\n                    <Input id=\"email-confirmation\" type=\"email\" inputRef={emailConfirmationRef}/>\r\n                    <FormHelperText id=\"email-confirmation-helper-text\">Enter new email again</FormHelperText>\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup row={true} id=\"password-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"password\" id=\"password-label\">Password</InputLabel>\r\n                    {passwordInput}\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup row={true} id=\"password-confirmation-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"password-confirmation\" id=\"password-confirmation-label\">Password Confirmation</InputLabel>\r\n                    {passwordConfirmationInput}\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup row={true} id=\"current-password-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel required htmlFor=\"current-password\" id=\"current-password-label\">Current Password</InputLabel>\r\n                    {currentPasswordInput}\r\n                  </FormControl>\r\n                </FormGroup>\r\n                <FormGroup row={true} id=\"submit-group\" sx={{marginTop: \"1em\"}}>\r\n                  <FormControl fullWidth>\r\n                    <Button \r\n                      disabled={loading} \r\n                      variant=\"contained\" \r\n                      color=\"primary\" \r\n                      type=\"submit\" \r\n                      id=\"submit-button\">Save Changes</Button>\r\n                  </FormControl>\r\n                </FormGroup>\r\n              </form>\r\n            </Container>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default UpdateProfile"]},"metadata":{},"sourceType":"module"}